name: Compile on Windows

on: [push, pull_request]

jobs:

  Compile-on-Windows:

    runs-on: windows-latest

    env:
      DEBIAN_FRONTEND: "noninteractive"
      QT_QPA_PLATFORM: "offscreen"
      XDG_RUNTIME_DIR: "/tmp"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TRIPLET: x64-windows
      CMAKE_GENERATOR: "Visual Studio 17 2022"
      VCPKG_ROOT: "C:/vcpkg-root"


    steps:

      - uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - uses: actions/checkout@v3
        with:
          submodules: true

      # Setup the build machine with the most recent versions of CMake and Ninja. Both are cached if not already: on subsequent runs both will be quickly restored from GitHub cache service.
      - uses: lukka/get-cmake@latest

      # Restore vcpkg from the GitHub Action cache service. Note that packages are restored by vcpkg's binary caching
      # when it is being run afterwards by CMake.
      - name: Restore vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ${VCPKG_INSTALLATION_ROOT}
            !${VCPKG_INSTALLATION_ROOT}/buildtrees
            !${VCPKG_INSTALLATION_ROOT}/packages
            !${VCPKG_INSTALLATION_ROOT}/downloads
            !${VCPKG_INSTALLATION_ROOT}/installed
          # The key is composed in a way that it gets properly invalidated whenever a different version of vcpkg is being used.
          key: |
            ${{ hashFiles( 'CMakeLists.txt' )}}

      # On Windows runners, let's ensure to have the Developer Command Prompt environment setup correctly.
      # As used here the Developer Command Prompt created is targeting x64 and using the default the Windows SDK.
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Update vcpkg
        run: ${VCPKG_INSTALLATION_ROOT}\vcpkg.exe update

      - name: Restore from cache the dependencies and generate project files
        run: |
          cmake --preset visual-studio-vcpkg
      
      - name: Build
        run: |
          cmake --build --preset visual-studio-vcpkg-release
