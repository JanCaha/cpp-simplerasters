name: Create DEB artifact and Release

on:
  workflow_run:
    workflows: ["Tests for Library"]
    types:
      - completed
    branches:
      - 'main'
      - 'master'
  workflow_dispatch:

jobs:

  Create-deb-file-library:

    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Update and Upgrade
        run: |
          sudo apt update
          sudo apt install ninja-build

      - name: Install GDAL
        run: |
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt update
          sudo apt-get -y install gdal-bin libgdal-dev

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure
        run: | 
           mkdir build
            cmake \
            -S. \
            -Bbuild \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTS:bool=off \
            -DPACK_DEB:bool=on \
            -D CMAKE_INSTALL_PREFIX=/usr

      - name: Build
        run: | 
          cmake --build build --config Release --target all

      - name: Pack deb file
        run: |
          cmake --build build --config Release --target pack_deb
      
      - name: Move deb file
        run: |
          mv _packages/simplerasters_*.deb .
          
      - name: Upload DEB file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: simplerasters
          path: simplerasters_*.deb
      
      - name: Version and latest tag
        id: version
        run: |
          echo "VERSION=$(grep "project(" CMakeLists.txt | grep -E -o -e "[0-9\.]+")" >> $GITHUB_OUTPUT
          echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          echo "CURRENT_TAG=v$(grep "project(" CMakeLists.txt | grep -E -o -e "[0-9\.]+")" >> $GITHUB_OUTPUT

      - name: Push tag
        uses: anothrNick/github-tag-action@1
        if: steps.version.outputs.CURRENT_TAG != steps.version.outputs.LATEST_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          CUSTOM_TAG : "v${{steps.version.outputs.VERSION}}"

      - name: Release
        uses: softprops/action-gh-release@v2
        if: steps.version.outputs.CURRENT_TAG != steps.version.outputs.LATEST_TAG
        with:
          files: simplerasters_*.deb
          tag_name: "v${{steps.version.outputs.VERSION}}"
    